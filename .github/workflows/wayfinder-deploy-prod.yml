{% raw %}
name: Wayfinder deploy to prod

on:
  workflow_dispatch:
    inputs:
      image-tag:
        description: 'Image tag to deploy to production'
        required: true
        default: 'main'

permissions:
  contents: read

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  wf-diff:
    name: "Wayfinder Diff"
    runs-on: ubuntu-latest

    container: quay.io/${{ vars.WAYFINDER_QUAY_ORG }}/wftoolbox:${{ vars.WAYFINDER_VERSION }}
    outputs:
      result: ${{ steps.diff.outcome }}
      stdout: ${{ steps.diff.outputs.stdout }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Wayfinder diff
        id: diff
        shell: bash
        env:
          WAYFINDER_SERVER: ${{ vars.WAYFINDER_SERVER }}
          WAYFINDER_TOKEN: ${{ secrets.WAYFINDER_TOKEN }}
          WAYFINDER_WORKSPACE: ${{ vars.WAYFINDER_WORKSPACE }}
        run: |
          set +e
          wf diff -f ./wayfinder --owner ${{ vars.WAYFINDER_RESOURCE_OWNER }} --prune --prune-scope all 2>&1 | tee stdout.txt
          diffExitCode=$?
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "stdout<<$EOF" >> "$GITHUB_OUTPUT"
          cat stdout.txt >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"
          exit $diffExitCode
  wf-apply:
    name: "Wayfinder Apply"
    needs:
      - wf-diff
    runs-on: ubuntu-latest
    container: quay.io/${{ vars.WAYFINDER_QUAY_ORG }}/wftoolbox:${{ vars.WAYFINDER_VERSION }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Wayfinder
        env:
          WAYFINDER_SERVER: ${{ vars.WAYFINDER_SERVER }}
          WAYFINDER_TOKEN: ${{ secrets.WAYFINDER_TOKEN }}
          WAYFINDER_WORKSPACE: ${{ vars.WAYFINDER_WORKSPACE }}
          APP_IMAGE_TAG: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ inputs.image-tag }}
        run: |
          wf apply -f ./wayfinder --owner ${{ vars.WAYFINDER_RESOURCE_OWNER }} --prune --prune-scope all --wait-for-ready 5m --confirm
          {% endraw %}
          wf deploy app ${{ values.name }} prod --component-container-image app=app=${APP_IMAGE_TAG}
